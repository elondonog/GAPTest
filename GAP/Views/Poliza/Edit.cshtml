@model GAP.Models.Poliza

@{
    ViewBag.Title = "Edit";

}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Editar poliza</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.ApplicationUserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ApplicationUserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ApplicationUserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idTipoCobertura, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<SelectListItem> ListCoberturas = new List<SelectListItem>();
                    ListCoberturas.Add(new SelectListItem
                    {
                        Text = "Terremoto",
                        Value = "1"
                    });
                    ListCoberturas.Add(new SelectListItem
                    {
                        Text = "Incendio",
                        Value = "2",
                        Selected = true
                    });
                    ListCoberturas.Add(new SelectListItem
                    {
                        Text = "Robo",
                        Value = "3"
                    });
                    ListCoberturas.Add(new SelectListItem
                    {
                        Text = "Perdida",
                        Value = "4"
                    });
                }

                @Html.DropDownListFor(model => model.idTipoCobertura, ListCoberturas, "-- Seleccione Cobertura --", new { htmlAttributes = new { @class = "form-control" } })

                @Html.ValidationMessageFor(model => model.idTipoCobertura, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idTipoRiesgo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<SelectListItem> ListRiesgo = new List<SelectListItem>();
                    ListRiesgo.Add(new SelectListItem
                    {
                        Text = "Bajo",
                        Value = "1"
                    });
                    ListRiesgo.Add(new SelectListItem
                    {
                        Text = "Medio",
                        Value = "2",
                        Selected = true
                    });
                    ListRiesgo.Add(new SelectListItem
                    {
                        Text = "Medio-Alto",
                        Value = "3"
                    });
                    ListRiesgo.Add(new SelectListItem
                    {
                        Text = "Alto",
                        Value = "4"
                    });
                }

                @Html.DropDownListFor(model => model.idTipoCobertura, ListRiesgo, "-- Seleccione Riesgo --")
                @Html.ValidationMessageFor(model => model.idTipoRiesgo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idTipoEstado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">                        
                @{
                    List<SelectListItem> ListEstadoPoliza = new List<SelectListItem>();

                    ListEstadoPoliza.Add(new SelectListItem
                    {
                        Text = "Asignado",
                        Value = "1"
                    });

                    ListEstadoPoliza.Add(new SelectListItem
                    {
                        Text = "Cancelado",
                        Value = "2",
                        Selected = true
                    });
                }

                @Html.DropDownListFor(model => model.idTipoCobertura, ListEstadoPoliza, "-- Seleccione Estado Poliza --")
                @Html.ValidationMessageFor(model => model.idTipoEstado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NombrePoliza, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NombrePoliza, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NombrePoliza, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DescripcionPoliza, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DescripcionPoliza, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DescripcionPoliza, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FechaInicio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FechaInicio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FechaInicio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NumeroMesesCobertura, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NumeroMesesCobertura, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NumeroMesesCobertura, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Precio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "../")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
